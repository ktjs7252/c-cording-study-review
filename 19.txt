/*
ex1) 길이 4x4인 2차원 배열을 선언하고, 모든 요소를 아래 그림 형태로 초기화하자.
     1  2  3  4
     5  6  7  8
     9  10 11 12
     13 14 15 16

00 01 02 03
10 11 12 13
20 21 22 23
30 31 32 33 

     그리고, 오른쪽 방향으로 90도씩 돌려서 그 결과를 출력하는 프로그램 작성.
     13  9 5 1
     14 10 6 2
     15 11 7 3
     16 12 9 4

30 20 10 00
31 21 11 01
32 22 12 02
33 23 13 03
#include <stdio.h>
int change(int(*p)[4])
{
	int tmp[4][4];
	int i, j;
	int x;
	int y = 0;
	// x=3;y=0;
	for (i = 0; i < 4; i++)
	{
		x = 3;
		for (j = 0; j < 4; j++)
		{
			//x=3; y=0; i=0. j=0;
			tmp[i][j] = p[x][i];
			x--;
		}
		
	}

		for (i = 0; i < 4; i++)
		{
			for (j = 0; j < 4; j++)
			{
				printf("%3d", tmp[i][j]);
			}
			printf("\n");
		}

	}


	int main()
	{
		int arr[4][4] = { 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16 };
		int i;

		change(arr);

		return 0;
	}

ex2) 달팽이 배열을 만들어 이를 출력하는 프로그램 작성.
     (tip, 배열을 채울 때, 가로 방향을 채우는 반복문, 세로방향을 채우는 반복문을 독립적으로 구성하는 것이 포인트.)
     ex) 사용자 입력 : 4
         1   2  3 4
         12 13 14 5
         11 16 15 6
         10  9  8 7

>중간 복습
1. printf(), scanf(), gets(), puts()
   - %c, %d %lf, %s

2. 자료형 & 변수

3. if문, for문, while문, continue, break

4. 배열

5. 포인터

6. 2차원 배열 & 2차원 배열 포인터

ex1) 정수 천만 이하의 하나의 수를 입력받아 만, 천, 백, 십, 일 단위로 출력하는 프로그램 작성
     ex)2347653 -> 234만 7천 6백 5십 3입니다.
     -> /(몫), %(나머지)

ex2) 사용자에게 정수형 숫자 한개 입력받고, 2~입력받은 숫자 까지 모든 소수 출력

ex3) 아래의 출력을 보이는 프로그램 작성.
      *
      0*
      00*
      000*
      0000*

ex4) 사용자로부터 영단어 입력받아 char형 배열에 저장. 
     그 다음 배열에 저장된 영단어를 역순으로 뒤집는다. (이 때, 널 문자의 위치를 변경하면 안됨.)
     뒤집고 나서 뒤집힌 영단어 출력.
#include <stdio.h>
int main()
{
	char arr[10];
	char tmp[10];
	int i,length=0;
	int score;
	gets(arr);

	while (arr[length] += '\0')
	{
		length++;
	}
	score = length;

	for (i = 0; i <length; i++)
	{
		score--;
		tmp[i] = arr[score];  //i=0 , length =3
	}
	
	for (i = 0; i < length; i++)
	{
		printf("%c", tmp[i]);
	}
}

ex5) 사용자로부터 영단어 입력받아, 구성하는 문자 중 아스키 코드 값이 가장 큰 문자를 찾아서 출력.
     예를들어, "LOVE" 라면 이 중 아스키 코드 값이 가장 큰 문자는 'V'이므로 V가 출력.

ex6) 길이가 10인 배열 선언하고, 총 10개의 정수를 입력받아서, 홀/짝 구분지어 출력하는 프로그램 작성.
     일단, 홀수 출력하고 짝수 출력.
     단, 10개의 정수는 main 함수 내에서 입력 받고, 홀수 출력하는 함수, 짝수 출력하는 함수 각각 정의해서,
     main에서 이 두 함수를 호출하는 방식으로 프로그램 작성.
#include <stdio.h>
int hall(int *p)
{
	int i;
	for (i = 0; i < 10; i++)
	{
		if (p[i] % 2 != '\0')
		{
			printf("%d ", p[i]);
		}
	}
	printf("\n");
}
int gang(int *p)
{
	int i;
	for (i = 0; i < 10; i++)
	{
		if (p[i] % 2 == 0)
		{
			printf("%d ", p[i]);
		}
	}
	printf("\n");
}
int main()
{
	int arr[10];
	int i;

	for (i = 0; i < 10; i++)
	{
		scanf_s("%d", &arr[i]);
	}

	hall(arr);
	gang(arr);

	return 0;
}

ex7) 사용자로부터 10진수 정수 하나를 입력 받은 다음, 이를 2진수로 변환해서 출력하는 프로그램 작성.
      ex) 10진수 정수 입력 : 12
          1100

ex8) 길이가 10인 배열 선언하고, 총 10개의 정수를 입력받는다.
     단, 입력받은 숫자가 홀수이면 배열 앞에서부터 채워나가고,
     짝수이면 뒤에서 부터 채워나가는 형식으로 배열에 저장하기. 
     ex) [1,2,3,4,5,6,7,8,9,10] -> 배열 : [1,3,5,7,9,10,8,6,4,2]
#include <stdio.h>
int main()
{
	int arr[10];
	int tmp[10];
	int i, front = 0, end = 9;;

	for (i = 0; i < 10; i++)
	{
		scanf_s("%d", &arr[i]);
	}
	
	for (i = 0; i < 10; i++)
	{
		if (arr[i] % 2 != 0)
		{
			tmp[front] = arr[i];
			front++;
		}
		if (arr[i] % 2 == 0)
		{
			tmp[end] = arr[i];
			end--;
		}
	}
	for (i = 0; i < 10; i++)
	{
		printf("%d ", tmp[i]);
	}
	return 0;

}

ex9) 다음과 같이 두개의 int형 포인터 변수와 길이가 5인 int형 배열은 선언한다.
     int* maxPtr;
     int* minPtr;
     int arr[5];

     1. arr 배열에 정수 5개를 입력받자.
     2. 그리고 MaxAndMin이란 이름의 함수를 정의하고, 이를 호출하면서 위의 배열과 두 포인터 변수를 전달하자.
     3. 함수 호출이 완료되면, 포인터 변수 maxPtr에는 가장 큰 값이 저장된 배열 요소의 주소값이,
     4. minPtr에는 가장 작은 값이 저장된 배열 요소의 주소 값이 저장되어야 한다.


ex10) 아래에 주어진, 1차원 배열의 합을 계산하는 sumAry1D(int ary[], int size)함수를 이용하여,
      2차원 배열의 배열 원소 합을 구하는 프로그램 작성.
      int sumAry1D(int ary[], int size)
      {
         int i, sum = 0;
        
         for(i=0; i<size; i++)
         {
            sum += ary[i];
         }
 
         return sum;
      }


>문자와 문자열 관련함수

>구조체 & 구조체 포인터.

>메모리 관리 & 동적할당

>END

>C전체 복습

>자료구조 (21.06 ~ 21.09) 3개월
 -
 -
>알고리즘 (21.10 ~ 22.03) 6개월
 -
 -
*/

/*
ex2) 사용자에게 정수형 숫자 한개 입력받고, 2~입력받은 숫자 까지 모든 소수 출력

약수가 1과 자기자신 = 소수.
*/
#include <stdio.h>

#pragma warning(disable:4996)

int main(void)
{
    int i, n, k, signal = -1;

    scanf("%d", &n);

    for (k = 2; k <= n; k++) // k = 소수 인지 아닌지 판단해야 할 수.
    {
        signal = -1; // 매 순간 k 검사 할 때마다, signal은 -1로 초기화 해줘야 함.

        // 2 ~ k-1로 k를 다 나누어보기.
        // 나누어지는게 하나라도 있으면 걔는 소수가 아니다.
        for (i = 2; i < k; i++)
        {
            if (k % i == 0) // 나누어진다. => k는 소수가 아니다.
            {
                signal = 1;
                break;
            }
        }

        // signal == -1 -> 나누어지는 녀석이 없었다 => 소수다.
        if (signal == -1)
        {
            printf("%d ", k);
        }
    }

    return 0;
}
/*
int main(void)
{
    int n, i, j,sign;

    scanf("%d", &n);

    printf("소수 : 2 3 ");
    for (i = 4; i <= n; i++)
    {
        sign = -1;
        for (j = 2; j < i; j++)
        {
            if (i % j == 0) 
            {
                // sign = -1;
                break;
            }
            else
                sign = 1;
        }
        if (sign == 1) {
            printf("%d ", i);
        }
    }

    return 0;
}
*/
