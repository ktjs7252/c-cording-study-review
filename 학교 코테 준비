map에서의 최단거리 구하기

#include <stdio.h>
#include <queue>
using namespace std;

int dx[] = { -1,0,1,0 };
int dy[] = { 0,1,0,-1 };
int map[11][11];
int visited[11][11];
int n;
queue<pair<int, int>> q;
int answer;

void bfs(int x, int y)
{
	int ny, nx,i;

	visited[x][y]=1;;
	q.push({ x,y });

	while (!q.empty())
	{
		x = q.front().first;
		y = q.front().second;
		q.pop();

		for (i = 0; i < 4; i++)
		{
			nx = x + dx[i];
			ny = y + dy[i];

			if (0 <= nx && nx < n && 0 <= ny && ny < n)
			{
				if (visited[nx][ny] == false && map[nx][ny] == 1)
				{
					visited[nx][ny] == true;
					map[nx][ny] = map[x][y] + 1;
					q.push({ nx,ny });
				}
			}
		}
	}
}

int main(void)
{
	int i, j;

	scanf("%d",&n);

	for (i = 0; i < n; i++)
	{
		for (j = 0; j < n; j++)
		{
			scanf("%1d", &map[i][j]);
		}
	}

	bfs(0, 0);

	printf("%d", map[n - 1][n - 1]);

	return 0;
}


-------------------------------------------
평형저울 공부해야함
-------------------------------------------
다익스트라 알고리즘을 c언어로 해볼수 있을까?
