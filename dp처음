<DP>
=====================================================

> BOJ DP 1463번 <1로 만들기>
  문제 :
     - 정수 X에 사용할수 있는 연산은 다음과 같이 세가지이다.
       1. X가 3으로 나누어 떨어지면, 3으로 나눈다.
       2. X가 2로 나누어 떨어지면, 2로 나눈다.
       3. 1을 뺀다.

     - 정수 N이 주어졌을 때, 위와 같은 연산 세개를 적절히 사용해 1을 만들려고 한다.
     - 연산을 사용하는 횟수의 최솟값 출력.
    
  입력 : 
     - 1보다 크거나 같고, 10^6(1백만)보다 작거나 같은 정수 N이 주어짐.

  Hint : 
     - 10의 경우, 10 -> 9 -> 3 -> 1 로 3번만에 만들 수 있음.


     -------------------------------------------------------------------------------


> BOJ DP 9095번 <1,2,3 더하기>
  문제 : 
     - 정수 N이 주어졌을 때, N을 1,2,3의 합으로 나타내는 방법의 수를 구하는 프로그램 작성

  입력 : 
     - N은 양수이며 11보다 작다. 

  HINT : 
     - 정수 4를 1,2,3의 합으로 나타내는 방법은 총 7가지가 있다. 
       - 1+1+1+1
       - 1+1+2
       - 1+2+1
       - 2+1+1
       - 2+2
       - 1+3
       - 3+1

dp[N] : N을 1,2,3의 합으로 나타내는 총 방법의 수.
 */

/*
> BOJ DP 1463번 <1로 만들기>
  문제 :
     - 정수 X에 사용할수 있는 연산은 다음과 같이 세가지이다.
       1. X가 3으로 나누어 떨어지면, 3으로 나눈다.
       2. X가 2로 나누어 떨어지면, 2로 나눈다.
       3. 1을 뺀다.

     - 정수 N이 주어졌을 때, 위와 같은 연산 세개를 적절히 사용해 1을 만들려고 한다.
     - 연산을 사용하는 횟수의 최솟값 출력.

  입력 :
     - 1보다 크거나 같고, 10^6(1백만)보다 작거나 같은 정수 N이 주어짐.

  Hint :
     - 10의 경우, 10 -> 9 -> 3 -> 1 로 3번만에 만들 수 있음.
                 
     1) 10 -> 9 -> 8 -> 7
                -> 3 -> 2
                     -> 1

     2) 10 -> 5 -> 4 -> 3 -> 2
                          -> 1
                     -> 2 -> 1

dp[1] = 0;
dp[2] = 1;
dp[3] = 1;
dp[4] = 2;
dp[5] = 3 나온 이유?
   5 -> 4 -> 2 -> 1
     +1 + dp[4]

dp[6] = 2;
   6 -> dp[5] + 1
   6 -> dp[3] + 1
   6 -> dp[2] + 1

 dp는 무조건 sub problem -> big problem 으로 가야 한다.
 작은 문제의 솔루션이 곧 큰 문제의 솔루션이다.

 dp[N] : N을 1로 만들기 위해 필요한 연산 최소값.

 dp[1] = 0;
 dp[2] = 1; 
 dp[3] = 1;
  정수 X에 사용할수 있는 연산은 다음과 같이 세가지이다.
       1. X가 3으로 나누어 떨어지면, 3으로 나눈다.
       2. X가 2로 나누어 떨어지면, 2로 나눈다.
       3. 1을 뺀다.
dp[1] = 0;
dp[2] = 1;
dp[3] = 1;
dp[4] = 2;
dp[5] = 3 나온 이유?
   5 -> dp[4] + 1


dp[6] = 2;
   6 -> dp[5] + 1
   6 -> dp[3] + 1
   6 -> dp[2] + 1

// int dp[1000001]; // segmentation fault -> 메모리 - 스택 영역에 할당. -> 지역변수라서 메모리 크기 한계가 있는데, VS(1MB), 리눅스(8MB)
*/
#include <stdio.h>

#pragma warning(disable:4996)

int dp[1000001]; // 메모리 - 데이터 영역에 할당. 연산속도가 좀더 빨라. 그리고 메모리 크기에 제한이 없어. 

int main(void)
{
    return 0;
}
