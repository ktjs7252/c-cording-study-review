/*
* 중간점검 - 포인터&배열까지 문제풀이

1. 길이가 10인 배열 선언하고, 총 10개의 정수를 입력받아서, 홀/짝 구분지어 출력하는 프로그램 작성.
   일단, 홀수 출력하고 짝수 출력.
   단, 10개의 정수는 main 함수 내에서 입력 받고, 홀수 출력하는 함수, 짝수 출력하는 함수 각각 정의해서,
   main에서 이 두 함수를 호출하는 방식으로 프로그램 작성.
#include <stdio.h>
void hall(int *p)
{
	int i;
	for (i = 0; i < 10; i++)
	{
		if (p[i] % 2 != 0)
			printf("%d ", p[i]);
	}
}
void Gack(int *p)
{
	int i;
	for (i = 0; i < 10; i++)
	{
		if (p[i] % 2 == 0)
			printf("%d ", p[i]);
	}
}

int main()
{
	int arr[10];
	int num, i;

	for (i = 0; i < 10; i++)
	{
		scanf_s("%d", &arr[i]);
	}
	hall(arr);
	Gack(arr);

	return 0;


2. 사용자로부터 10진수 정수 하나를 입력 받은 다음, 이를 2진수로 변환해서 출력하는 프로그램 작성.
   ex) 10진수 정수 입력 : 12
       1100
#include <stdio.h>
void change(int n)
{
	int r, q;

	r = n / 2; // 몫
	q = n % 2; // 나머지

	if (r == 0) 
	{
		printf("%d", q);
	}
	else 
	{
		change(r);
		printf("%d", q);
	}

}
int main()
{
	int num;
	scanf_s("%d", &num);

	change(num);
	return 0;
}

3. 길이가 10인 배열 선언하고, 총 10개의 정수를 입력받는다.
   단, 입력받은 숫자가 홀수이면 배열 앞에서부터 채워나가고,
   짝수이면 뒤에서 부터 채워나가는 형식으로 배열에 저장하기. 
   ex) [1,2,3,4,5,6,7,8,9,10] -> 배열 : [1,3,5,7,9,10,8,6,4,2]
#include <stdio.h>
int main()
{
	int arr[10];
	int num, i;
	int front = 0;
	int end = 9;

	for (i = 0; i < 10; i++)
	{
		scanf_s("%d", &arr[i]);
	}
	for (i = 0; i < 10; i++)
	{
		if (arr[i] % 2 != 0) {
			arr[front] = arr[i];
			front++;
		}
		else if (arr[i] % 2 == 0) {
			arr[end] = arr[i];
			end--;
		}
	}
	for (i = 0; i < 10; i++) {
		printf("%d ", arr[i]);
	}
}
이렇게 하지말고 숫자를 받자마자 판별하거나 배열을 두개쓰면가능

4. 회문(Palindrome)은 앞으로 읽으나 뒤로 읽으나 차이가 없는 단어를 뜻한다.
   level, bob 같은 단어들은 회문에 속한다.
   인자로 전달되는 영단어가 회문인지 아닌지를 판단해서 그 결과를 출력하는 기능의 함수를 정의하고,
   main 함수에서 이를 적절히 활용하는 프로그램 작성.
   (단, 대소문자까지 일치하여 회문으로 인정.)
   ex) 문자열 입력 : noon
       회문입니다.













#include <stdio.h>
int main()
{
	int i, length = 0;;
	char arr[10];
	gets(arr);

	while (arr[length] != '\0') {
		length++;
	}

	int score = 0;
	printf("%d", length);
	for (i = 0; i < length / 2; i++)
	{
		if (arr[i] == arr[length -1 -i])
			score++;
	}

	
	if (score == length / 2) {
		printf("화문입니다.\n");
	}
	else {
		printf("화문이 아닙니다.\n");
	}
	return 0;
}

>다차원 배열의 이해와 활용.

1. int arrOne[10];

   int arrTwo[3][4]; // 세로(행) 길이 3, 가로(열) 길이 4인 2차원 배열
   [0][0][0][1]...[0][3]
   [1][0][1][1]...[1][3]
   [2][0][2][1]...[2][3]

   int arrThree[2][3][4]; //높이(2), 세로(3), 가로(4) -> 잘 사용하지 않는다!

2. int arr[3][4]; 
   sizeof(arr)?

3. 2차원 배열 요소의 접근
   int arr[3][4];
   arr[0][0] = 1;
   arr[0][1] = 2;
   입력 받을 땐? scanf("%d", &arr[1][2]);

4. 2차원 배열의 메모리 할당 형태 -> 2차원 형태일까? NO -> 메모리 할당은 항상 1차원 형태. 
   int arr[3][2];
   printf("%d", &arr[i][j]);

5. 2차원 배열 선언관 동시에 초기화.
   int arr[2][3] = {
      {1,2,3}, 
      {4,5,6}
   };

   int arr[3][3] = {
      {1},
      {2,3},
      {4,5,6}
   };
   => 빈 영역은?

   int arr[3][3] = {
      1,2,3,
      4,5,6,
      7
   };
   => 중괄호 없이 초기화 하면?

6. 배열 크기를 알려주지 않고 초기화 하면?
   int arr[][] = {1,2,3,4,5,6,7,8};
   1x8, 2x4, 4x2, 8x1 ? 컴파일러는 가로 세로 사이즈를 알 수 없다.
   
   따라서, 생략할거면 세로(행) 길이만 생략 가능하다!
   ex) int arr[][4] = {1,2,3,4,5,6,7,8};
  
ex1) 구구단 2,3,4단을 저장하는 2차원 배열을 선언하고, 출력해보자!

*/

/*

*/

#include <stdio.h>

#pragma warning(disable:4996)

int main(void)
{    

    return 0;
}
