**선택 정렬**

선택 정렬은 매 차례마다 정렬되지 않은 원소들을 모두 확인하여 각 인덱스에 맞는 원소를 선택하여 해당 인덱스의 원소와 교환해주는 정렬입니다.
매 차례마다 남은 원소들을 모두 확인하기 때문에 시간 복잡도는 최악의 연산 횟수나 평균 연산 횟수나 O(N^2)입니다.
연산과정을 의사코드로 나타내면 다음과 같습니다.

#include <stdio.h>
void selection_sort(int list[], int n)
{
	int i, j, least, temp;
	for (i = 0; i < n - 1; i++)
	{
		least = i;
		for (j = i; j < n; j++)
		{
			if (list[j] < list[least])
			{
				least = j;
			}
		}
		SWAP(list[i], list[least], temp);
	}
}

---------------------------------------------------

#include <stdio.h>
#define MAX 5005
int arr[MAX];
int N;
void Swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

void selection_sort(int *arr, int size) {
    for (int i = 0; i < size; i++) {
        int minidx = i;
        for (int j = i + 1; j < size; j++) {
            if (arr[minidx] > arr[j]) {
                minidx = j;
            }
        }
        Swap(&arr[minidx], &arr[i]);
    }
}
int main() {
    scanf("%d",&N);
    for(int i=0; i<N; i++) {
        scanf("%d",&arr[i]);
    }
    selection_sort(arr, N);
    for (int i = 0; i < N; i++) {
        printf("%d ", arr[i]);
    }
    return 0;
}
