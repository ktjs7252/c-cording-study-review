#include <stdio.h>
#include "ArrayList.h"

void ListInit(List* plist)
{
   plist->numOfData = 0;
   plist->curPosition = 0;
}

void LInsert(List* plist, LData data)
{
   plist->arr[plist->numOfData] = data;
   (plist->numOfData)++;
}

int LFirst(List* plist, LData* pdata)  
{
   plist->curPosition = 0;
   if (plist->numOfData == 0) 
   {
      return FALSE;
   }
   else 
   {
      *pdata = plist->arr[plist->curPosition];
      return TRUE;
   }
}

int LNext(List* plist, LData* pdata)
{
   (plist->curPosition)++;
   if (plist->curPosition >= plist->numOfData)
   {
      return FALSE;
   }
   else
   {
      *pdata = plist->arr[plist->curPosition];
      return TRUE;
   }
}

LData LRemove(List* plist)
{
   int r_idx = plist->curPosition;
   LData r_data = plist->arr[r_idx];
   int i;

   for (i = r_idx; i < (plist->numOfData)-1; i++)
   {
      plist->arr[i] = plist->arr[i + 1];
   }
   
   (plist->curPosition)--;
   (plist->numOfData)--;

   return r_data;
}

int LCount(List* plist)
{
   return plist->numOfData;
}


_______________________________________________

/*
ex1) ListUseMain.c 파일 작성.

     ArrayList.h, ArrayList.c 2가지 파일을 프로젝트에 포함시키자.
     이를 기반으로 다음의 순서대로 일이 진행되도록 main 함수를 정의해보자.
     1. 리스트 생성 및 초기화 한 다음, 정수 1 ~ 9까지 리스트에 저장한다.
     2. 리스트에 저장된 값을 순차적으로 참조하여 그 합을 계산하여 출력한다.
     3. 리스트에 저장된 값들 중 2의 배수와 3의 배수에 해당하는 값을 모두 삭제 한다.
     4. 마지막으로 리스트에 저장된 데이터를 순서대로 출력한다.

*/
#include <stdio.h>
#include "ArrayList.h"

int main(void)
{
    List list;
    int data,sum=0;
    int i;
    ListInit(&list);

    for (i = 0; i < 9; i++)
    {
        LInsert(&list , i+1); // 1. 리스트 생성 및 초기화 한 다음, 정수 1 ~ 9까지 리스트에 저장한다.
    }

    if (LFirst(&list,&data))
    {
        sum += data;

        while (LNext(&list, &data))
        {
            sum += data;
        }
    }

    printf("합은 %d\n", sum);

    if (LFirst(&list, &data))
    {
        if ((data % 2 == 0) || (data % 3 == 0))
        {
            printf("삭제 숫자 : %d\n",LRemove(&list));   //주의 :삭제할때 현재포지션으로 반환해서 삭제해야함
        }
        while (LNext(&list, &data))
        {
            if ((data % 2 == 0) || (data % 3 == 0))
            {
                printf("삭제 숫자 : %d\n", LRemove(&list));
            }
        }
    }

    if (LFirst(&list, &data))
    {
        printf("%d ",data);

        while (LNext(&list, &data))
        {
            printf("%d ", data);
        }
    }
   return 0;
}
